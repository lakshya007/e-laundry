create or replace trigger userpkcheck
before insert on user_shop for each row
declare
c1 number;
rec user_shop%rowtype;
cursor c is select *from user_shop;
begin
open c;
c1:=0;
loop
fetch c into rec;
exit when c%notfound;
if :new.roll_no=rec.roll_no then
c1:=c1+1;
end if;
end loop;
if c1>0 then
raise_application_error(-20003,'User already exist!!');
end if;
end;

create or replace trigger userfkcheck
before insert or update on services for each row
declare
c1 number;
rec user_shop%rowtype;
cursor c is select *from user_shop;
begin
open c;
c1:=0;
loop
fetch c into rec;
exit when c%notfound;
if :new.roll_no=rec.roll_no then
c1:=c1+1;
end if;
end loop;
if c1=0 then
raise_application_error(-20003,'User Must be Registered!!');
end if;
end;

create or replace trigger gen_bill_no
before insert on services for each row
declare 
i number;
begin
select max(bill_no) into i from services;
if i is null then
:new.bill_no:=1;
else
:new.bill_no:=i+1;
end if;
end;

create or replace trigger washing_job_check
before insert or update on washing for each row
declare 
c number;
begin
c:=:new.job_id;
c:=c/100;
c:=floor(c);
if c!=1 then
raise_application_error(-20003,'Incorrect Job ID!!!!!');
else
select price into c from jobs where job_id=:new.job_id;
:new.due:=c*:new.qty;
end if;
end;

create or replace trigger ironing_job_check
before insert or update on ironing for each row
declare 
c number;
begin
c:=:new.job_id;
c:=c/100;
c:=floor(c);
if c!=2 then
raise_application_error(-20003,'Incorrect Job ID!!!!!');
else
select price into c from jobs where job_id=:new.job_id;
:new.due:=c*:new.qty;
end if;
end;

create or replace trigger dry_clean_job_check
before insert or update on dry_clean for each row
declare 
c number;
begin
c:=:new.job_id;
c:=c/100;
c:=floor(c);
if c!=3 then
raise_application_error(-20003,'Incorrect Job ID!!!!!');
else
select price into c from jobs where job_id=:new.job_id;
:new.due:=c*:new.qty;
end if;
end;

create or replace trigger tailoring_job_check
before insert or update on tailoring for each row
declare 
c number;
begin
c:=:new.job_id;
c:=c/100;
c:=floor(c);
if c!=4 then
raise_application_error(-20003,'Incorrect Job ID!!!!!');
else
select price into c from jobs where job_id=:new.job_id;
:new.due:=c*:new.qty;
end if;
end;

create or replace trigger Cal_tot
before update of status on services for each row
declare
c1 number;
c2 number;
c3 number;
c4 number;
begin
c1:=cal_dry_clean_tot(:old.bill_no);
c2:=cal_washing_tot(:old.bill_no);
c3:=cal_ironing_tot(:old.bill_no);
c4:=cal_tailoring_tot(:old.bill_no);
:new.total_due:=c1+c2+c3+c4;
end;
